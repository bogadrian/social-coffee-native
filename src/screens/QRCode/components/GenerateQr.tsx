import React, { useState, useEffect } from 'react';
import { StyleSheet, Dimensions, View, Share } from 'react-native';

import axios from 'axios';
import * as SecureStore from 'expo-secure-store';

import { connect } from 'react-redux';

import CustomText from '../../../custom/CustomText';
import CustomLayout from '../../../custom/CustomLayout';
import CustomButton from '../../../custom/CustomButton';
import Divider from '../../../custom/Divider';

export const { width, height } = Dimensions.get('window');
import QRCode from 'react-native-qrcode-svg';

import useMenuUrl from '../../../customHooks/createMenuUrl';

import Color from '../../../constants/Color';
import { URL } from '../../../constants/variables';

import { IProvider } from '../../../types/user.types';

import { base64 } from '../../../assets/coffeeBase64';

interface Props {
  user: IProvider;
  closeGenerator: () => void;
}

const styles = StyleSheet.create({
  layout: {
    flexGrow: 1,
    justifyContent: 'center',
    alignItems: 'center',
    height
  },
  text: {
    fontSize: 18,
    color: 'white',
    width: width * 0.8,
    textAlign: 'center',
    marginBottom: 10
  },
  text1: {
    fontSize: 16,
    color: Color.tertiary,
    width: width * 0.8,
    textAlign: 'center',
    marginBottom: 10
  },
  text2: {
    fontSize: 14,
    color: Color.primary,
    width: width * 0.8,
    textAlign: 'center',
    marginBottom: 10
  }
});

const defaultMenuPdf =
  'https://social-coffee-app.s3.eu-west-3.amazonaws.com/SeafoodRestaurentMenu.pdf-user-5f74ab9e75d83c404c5c9cd3-1601631116018.pdf';

const QRcodeScreen: React.FC<Props> = ({ user, closeGenerator }) => {
  const [svg, setSvg] = useState<any>();
  const [urlProvider, setUrlProvider] = useState<string>('');

  const url = useMenuUrl(user);

  useEffect(() => {
    writeMenuUrl();
  }, [urlProvider]);

  url.then((res: any) => setUrlProvider(res));

  const getDataURL = () => {
    svg.toDataURL(callback);
  };

  const callback = (dataURL: any) => {
    let shareImageBase64 = {
      title: 'Your Qr Code',
      message:
        'Here you have your QR Code generated by Social Coffee App! You can save it, share it with your clients or send it to you by email!',
      url: `data:image/png;base64,${dataURL}`,
      subject: 'Here you have your QR Code generated by Social Coffee App' //  for email
    };
    Share.share(shareImageBase64).catch(error => console.log(error));
  };

  const writeMenuUrl = async () => {
    const token = await SecureStore.getItemAsync('jwt');

    const data = { urlProvider };

    try {
      const axiosInstance = await axios.create({
        baseURL: `${URL}/api/v1/provider/writeUrl`,
        headers: {
          Authorization: `Bearer ${token}`,
          'Access-Control-Allow-Origin': '*'
        },
        timeout: 6000
      });

      const response = await axiosInstance({
        method: 'PATCH',
        data
      });

      console.log(response.data.data);
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <React.Fragment>
      <CustomLayout style={styles.layout}>
        <View style={{ marginTop: 20 }}>
          <CustomText type="extra-bold" style={styles.text}>
            Here is your URL:
          </CustomText>
        </View>
        <CustomText type="light" style={styles.text2}>
          At this URL your clients will find the menu you upload on this app any
          time you want!
        </CustomText>
        <CustomText type="extra-bold" style={styles.text1}>
          https://socialcoffeeapp.app/commercial/{urlProvider}
        </CustomText>
        <Divider />
        <CustomText type="extra-bold" style={styles.text}>
          And here is your generated QR Code
        </CustomText>

        <QRCode
          value={
            !!urlProvider ? JSON.stringify({ urlProvider }) : defaultMenuPdf
          }
          logo={{ uri: base64 }}
          logoSize={60}
          logoBackgroundColor="transparent"
          getRef={c => setSvg(c)}
          size={200}
        />
        <View style={{ marginTop: 20, marginBottom: 30 }}>
          <CustomButton
            buttonWidth="60%"
            name="account-heart-outline"
            size={18}
            color="cyan"
            fontSize={12}
            textType="bold"
            text="Share your Qr Code"
            onPress={getDataURL}
          />
        </View>
        <View style={{ marginTop: 10, marginBottom: 30 }}>
          <CustomButton
            buttonWidth="60%"
            name="close"
            size={18}
            color={Color.secondary}
            fontSize={12}
            textType="bold"
            text="Close"
            onPress={closeGenerator}
          />
        </View>
      </CustomLayout>
    </React.Fragment>
  );
};

const mapStateToProps = ({ user }: any) => ({
  user: user.user
});

export default connect(mapStateToProps)(QRcodeScreen);
